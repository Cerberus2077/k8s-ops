apiVersion: v1
kind: Namespace
metadata:
  name: devops
spec:
  finalizers:
  - kubernetes
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-provisioner-nfs
  namespace: devops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"creationTimestamp":"2021-12-18T14:22:22Z","name":"gitlab-k8s-sa-cluster"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"cluster-admin"},"subjects":[{"kind":"ServiceAccount","name":"gitlab-k8s-sa","namespace":"ms"}]}
  name: jenkins-provisioner-nfs-ClusterRoleBinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: jenkins-provisioner-nfs
  namespace: devops
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: jenkins-provisioner-nfs
  namespace: devops
spec:
  selector:
    matchLabels:
       app: jenkins-provisioner-nfs
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jenkins-provisioner-nfs
    spec:
      serviceAccount: jenkins-provisioner-nfs
      containers:
        - name: jenkins-provisioner-nfs
          image: registry.cn-beijing.aliyuncs.com/mydlq/nfs-subdir-external-provisioner:v4.0.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nfs-client-root
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: jenkins-provisioner-nfs
            - name: NFS_SERVER
              value: 192.168.187.145
            - name: NFS_PATH
              value: /var/lib/fileshare 
      volumes:
        - name: nfs-client-root
          nfs:
            server: 192.168.187.145
            path: /var/lib/fileshare

--- # 
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: jenkins-nfs
  namespace: devops
provisioner: jenkins-provisioner-nfs
--- # 创建pvc
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: cicd-pvc
  namespace: devops
spec:
  accessModes:  ["ReadWriteMany"]
  resources:
    requests:
      storage: 5Gi
  storageClassName:  jenkins-nfs
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: devops

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jenkins
rules:
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments"]
    verbs: ["create", "delete", "get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["create", "delete", "get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get","list","watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins
subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: devops