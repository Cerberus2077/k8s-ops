--- #定义一个使用sc的jenkins
kind: Deployment
apiVersion: apps/v1
metadata:
  name: jenkins
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccount: jenkins-provisioner-nfs
      containers:
      - name: jenkins
        image: harbor.justbeta.pro/devops/jenkinscs-blueocean:v1.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        - containerPort: 50000
          name: agent
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 400Mi
        livenessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 12
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 12
        env:
         - name: TZ
           value: "Asia/Shanghai"
        volumeMounts:
        - name: jenkins-volume
          subPath: jenkins-home
          mountPath: /var/jenkins_home
      volumes:
      - name: jenkins-volume
        persistentVolumeClaim:
          claimName: jenkins-k8s-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: devops
  labels:
    app: jenkins
spec:
  selector:
    app: jenkins
  type: ClusterIP
  ports:
  - name: web
    port: 8080
  - name: agent
    port: 50000
    targetPort: agent
--- # 证书
# 创建对象签发证书
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: justbeta-pro-certificate
  namespace: devops
spec:
  secretName: justbeta-pro-secret # 证书保存在这个 secret 中
  issuerRef:
    name: dnspod # 这里使用自动生成出来的 ClusterIssuer
    kind: ClusterIssuer
    group: cert-manager.io
  dnsNames: # 填入需要签发证书的域名列表，支持泛域名，确保域名是使用 dnspod 管理的
  - "*.justbeta.pro"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-https-jenkins
  namespace: devops
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    -  jenkins.justbeta.pro
    secretName: justbeta-pro-secret
  rules:
  - host: jenkins.justbeta.pro
    http:
      paths:
      - path: /
        pathType:  Prefix
        backend: 
         service:
           name: jenkins-service
           port:
            number: 8080
