apiVersion: v1
kind: Namespace
metadata:
  name: devops
spec:
  finalizers:
  - kubernetes
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-provisioner-nfs-sa
  namespace: devops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"creationTimestamp":"2021-12-18T14:22:22Z","name":"gitlab-k8s-sa-cluster"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"cluster-admin"},"subjects":[{"kind":"ServiceAccount","name":"gitlab-k8s-sa","namespace":"ms"}]}
  name: jenkins-provisioner-nfs-ClusterRoleBinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: jenkins-provisioner-nfs-sa
  namespace: devops
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"jenkins-provisioner-nfs","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"jenkins-provisioner-nfs"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"app":"jenkins-provisioner-nfs"}},"spec":{"containers":[{"env":[{"name":"PROVISIONER_NAME","value":"example.com/nfs"},{"name":"NFS_SERVER","value":"192.168.0.110"},{"name":"NFS_PATH","value":"/opt/nfs"}],"image":"registry.cn-beijing.aliyuncs.com/mydlq/nfs-subdir-external-provisioner:v4.0.0","imagePullPolicy":"IfNotPresent","name":"jenkins-provisioner-nfs","volumeMounts":[{"mountPath":"/persistentvolumes","name":"nfs-client-root"}]}],"serviceAccount":"jenkins-provisioner-nfs","volumes":[{"name":"nfs-client-root","nfs":{"path":"/opt/nfs","server":"192.168.0.110"}}]}}}}
  generation: 1
  name: jenkins-provisioner-nfs
  namespace: devops
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: jenkins-provisioner-nfs
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jenkins-provisioner-nfs
    spec:
      containers:
      - env:
        - name: PROVISIONER_NAME
          value: justbeta.money/nfs
        - name: NFS_SERVER
          value: 192.168.0.110
        - name: NFS_PATH
          value: /opt/nfs
        image: registry.cn-beijing.aliyuncs.com/mydlq/nfs-subdir-external-provisioner:v4.0.0
        imagePullPolicy: IfNotPresent
        name: jenkins-provisioner-nfs
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /persistentvolumes
          name: nfs-client-root
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: jenkins-provisioner-nfs-sa
      serviceAccountName: jenkins-provisioner-nfs
      terminationGracePeriodSeconds: 30
      volumes:
      - name: nfs-client-root
        nfs:
          path: /opt/nfs
          server: 192.168.0.110

---  
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: jenkins-nfs
  namespace: devops
provisioner: justbeta.money/nfs
--- # 创建pvc
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: devops-jenkins-pvc
  namespace: devops
spec:
  accessModes:  ["ReadWriteMany"]
  resources:
    requests:
      storage: 5Gi
  storageClassName:  jenkins-nfs
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: devops

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jenkins
rules:
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments"]
    verbs: ["create", "delete", "get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["create", "delete", "get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get","list","watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins
subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: devops