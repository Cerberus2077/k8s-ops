apiVersion: v1
kind: Namespace
metadata:
  name: gitlab
spec:
  finalizers:
  - kubernetes
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-provisioner
  namespace: gitlab
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"creationTimestamp":"2021-12-18T14:22:22Z","name":"gitlab-k8s-sa-cluster"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"cluster-admin"},"subjects":[{"kind":"ServiceAccount","name":"gitlab-k8s-sa","namespace":"ms"}]}
  name: gitlab-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: gitlab-provisioner
  namespace: gitlab
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: gitlab-k8s
spec:
  capacity:
    storage: 10Gi
  accessModes:
  - ReadWriteMany
  nfs:
    server: 192.168.187.145
    path: /var/lib/fileshare
--- 
kind: Deployment
apiVersion: apps/v1
metadata:
  name: justbeta.pro-nfs
  namespace: gitlab
spec:
  selector:
    matchLabels:
       app: gitlab-provisioner-nfs
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gitlab-provisioner-nfs
    spec:
      serviceAccount: gitlab-provisioner-nfs
      containers:
        - name: gitlab-provisioner-nfs
          image: registry.cn-beijing.aliyuncs.com/mydlq/nfs-subdir-external-provisioner:v4.0.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nfs-client-root
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: gitlab-provisioner-nfs
            - name: NFS_SERVER
              value: 192.168.187.145
            - name: NFS_PATH
              value: /var/lib/fileshare 
      volumes:
        - name: nfs-client-root
          nfs:
            server: 192.168.187.145
            path: /var/lib/fileshare

--- # 使用sc来创建pvc
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: gitlab-nfs
provisioner: gitlab-provisioner-nfs

--- #定义一个使用sc的gitlab
kind: Deployment
apiVersion: apps/v1
metadata:
  name: gitlab
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab
  template:
    metadata:
      labels:
        app: gitlab
    spec:
      serviceAccount: gitlab-k8s-sa
      containers:
      - name: gitlab
        image:  
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        - containerPort: 50000
          name: agent
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 400Mi
        livenessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 12
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 12
        volumeMounts:
        - name: gitlab-volume
          subPath: gitlab-home
          mountPath: /var/gitlab_home
      volumes:
      - name: gitlab-volume
        persistentVolumeClaim:
          claimName: gitlab-k8s-pvc

